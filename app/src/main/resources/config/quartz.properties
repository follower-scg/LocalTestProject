# ===========================================================================
# Configure Main Scheduler Properties 调度器属性
# ===========================================================================
#可为任何值,用在 JDBC JobStore 中来唯一标识实例,但是所有集群节点中必须相同
org.quartz.scheduler.instanceName = DefaultQuartzScheduler
#scheduler实例的标志id,必须是全局唯一的,AUTO表示自动生成
org.quartz.scheduler.instanceId = AUTO
#如果想使用Quartz在执行一个job前使用UserTransaction,则应该设置该属性为true;job执行完,在JobDataMap改变之后事务会提交.默认值是false
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false
#在程序运行中去检查quartz是否有版本更新;true:不检查,false:检查;默认false
org.quartz.scheduler.skipUpdateCheck = true

# ===========================================================================
# Configure RMI Settings 远程服务调用配置
# ===========================================================================
#Quartz Scheduler通过RMI作为服务器导出本身
org.quartz.scheduler.rmi.export = false
#如果要连接（使用）远程服务的调度程序，则将“org.quartz.scheduler.rmi.proxy”标志设置为true。必须指定RMI注册表进程的主机和端口 - 通常是“localhost”端口1099
org.quartz.scheduler.rmi.proxy = false
#RMI注册表进程的主机
#org.quartz.scheduler.rmi.registryHost
#RMI注册表进程的端口
#org.quartz.scheduler.rmi.registryPort

#============================================================================
# Configure ThreadPool
#============================================================================
#线程池的实现类
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
#指定线程数，至少为1
org.quartz.threadPool.threadCount = 10
#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）
org.quartz.threadPool.threadPriority = 5
#线程继承初始化线程的ContextClassloader
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

#============================================================================
# Configure JobStore
#============================================================================
#信息保存时间 默认值60秒
org.quartz.jobStore.misfireThreshold = 60000
#数据保存方式为数据库持久化
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
#数据保存方式为内存存储
#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
#数据库代理类
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.DB2v6Delegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.DB2v7Delegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.DriverDelegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.HSQLDBDelegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.MSSQLDelegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PointbaseDelegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.WebLogicDelegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.oracle.OracleDelegate
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.oracle.WebLogicOracleDelegate
#JobDataMaps是否都为String类型
org.quartz.jobStore.useProperties = false
#表的前缀，默认QRTZ_
org.quartz.jobStore.tablePrefix = QRTZ_
#是否加入集群
org.quartz.jobStore.isClustered = true
#scheduler的checkin时间
org.quartz.jobStore.maxMisfiresToHandleAtATime = 1